plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
}

android {
    compileSdk 33

    defaultConfig {
        applicationId "com.kouki.friends"
        minSdk 21
        targetSdk 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    Properties properties = new Properties()
    properties.load(project.rootProject.file('local.properties').newDataInputStream())

    // This config should be before buildTypes
    signingConfigs {
        release{
            storeFile file(System.getenv("HOME")+"/keystores/upload-keystore.jks")
            storePassword properties.getProperty("RELEASE_STORE_PASSWORD")
            keyAlias properties.getProperty("RELEASE_KEY_ALIAS")
            keyPassword properties.getProperty("RELEASE_KEY_PASSWORD")
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.3.1'
    }

    testOptions.unitTests.all{
        useJUnitPlatform()
        testLogging{
            events 'passed', 'failed', 'skipped', 'standardOut', 'standardError'
        }
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.9.0'
    implementation "androidx.compose.ui:ui:$compose_version"
    implementation "androidx.compose.material:material:$compose_version"
    implementation "androidx.compose.ui:ui-tooling-preview:$compose_version"
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.5.1'
    implementation "androidx.compose.runtime:runtime-livedata:$compose_version"
    //implementation "io.insert-koin:koin-android:$koinVersion"
    implementation 'androidx.activity:activity-compose:1.6.0'
    implementation "androidx.navigation:navigation-compose:$nav_version"
    
    // Koin main features for Android
    implementation "io.insert-koin:koin-android:$koin_android_version"
    implementation "io.insert-koin:koin-android-compat:$koin_android_version"
    implementation "io.insert-koin:koin-androidx-workmanager:$koin_android_version"
    implementation "io.insert-koin:koin-androidx-navigation:$koin_android_version"
    implementation "io.insert-koin:koin-androidx-compose:$koin_android_compose_version"

    // junit 5
    // (Required) Writing and executing Unit Tests on the JUnit Platform
    testImplementation "org.junit.jupiter:junit-jupiter-api:5.8.2"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:5.8.2"
    // (Optional) If you need "Parameterized Tests"
    testImplementation "org.junit.jupiter:junit-jupiter-params:5.8.2"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:1.6.4"

    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_version"
    androidTestImplementation "androidx.test.ext:junit-ktx:1.1.3"
    androidTestImplementation "androidx.test:core:1.4.0"
    androidTestImplementation "androidx.test:core-ktx:1.4.0"

    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    debugImplementation "androidx.compose.ui:ui-tooling:$compose_version"
    debugImplementation "androidx.compose.ui:ui-test-manifest:$compose_version"
}